akka {
  actor {
    provider = "cluster"
    warn-about-java-serializer-usage = "false"
  }
  remote {
    artery {
      enabled = on
      transport = tcp
      canonical.hostname = "127.0.0.1"
      canonical.port = 0
    }
  }
  cluster {
    seed-nodes = [
      "akka://ClusterSystem@127.0.0.1:2551",
      "akka://ClusterSystem@127.0.0.1:2552"]
    sharding {
      state-store-mode = "persistence"
      remember-entities = true
    }
  }
  persistence {
    journal.plugin = "akka.persistence.journal.inmem"
    journal.leveldb.dir = "target/example/journal"
    snapshot-store.plugin = "akka.persistence.snapshot-store.local"
    snapshot-store.local.dir = "target/example/snapshots"
  }
}

akka.kafka.consumer {
  poll-interval = 50ms
  poll-timeout = 50ms
  stop-timeout = 30s
  close-timeout = 20s
  commit-timeout = 15s
  commit-time-warning = 1s
  # wakeup-timeout = 3s
  # max-wakeups = 10
  commit-refresh-interval = infinite
  # wakeup-debug = true
  use-dispatcher = "akka.kafka.default-dispatcher"
  kafka-clients {
    enable.auto.commit = false
  }
  wait-close-partition = 500ms
  position-timeout = 5s
  offset-for-times-timeout = 5s
  metadata-request-timeout = 5s
  eos-draining-check-interval = 30ms
  partition-handler-warning = 5s
  connection-checker {
    enable = false
    max-retries = 3
    check-interval = 15s
    backoff-factor = 2.0
  }
}